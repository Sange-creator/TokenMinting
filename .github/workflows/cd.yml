name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Clean runner workspace
      run: |
        echo "Cleaning up runner workspace..."
        rm -f /home/ubuntu/actions-runner/run.sh || true
        sudo rm -rf "$GITHUB_WORKSPACE/*" || true
        
    - name: Configure Runner Environment
      run: |
        echo "Setting up runner environment..."
        echo "Runner IP: $(hostname -I | awk '{print $1}')"
        echo "Runner workspace: $GITHUB_WORKSPACE"
        whoami
        
    - uses: actions/checkout@v4
      with:
        clean: true
        fetch-depth: 1
        
    - name: Set up Docker permissions
      run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE
        sudo chmod -R 777 $GITHUB_WORKSPACE
    
    - name: Handle Docker Operations
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        SOLANA_NETWORK: devnet
        SOLANA_RPC_URL: https://api.devnet.solana.com
        SECRET_KEY: ${{ secrets.PRIVATE_KEY }}
      run: |
        # Ensure we're in a clean state
        sudo docker system prune -af --volumes || true
        
        # Navigate to backend directory
        cd backend
        
        # Pull the latest images defined in docker-compose
        sudo docker-compose pull || true
        
        # Stop and remove existing containers
        sudo docker-compose down --remove-orphans
        
        # Remove old images
        sudo docker image prune -f
        
        # Build fresh images
        sudo docker-compose build --no-cache
        
        # Start new containers in detached mode
        sudo docker-compose up -d
        
        # Wait for containers to be healthy
        sleep 10
        
        # Verify deployment
        sudo docker ps
        echo "Deployment completed successfully!" 